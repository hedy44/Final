<!DOCTYPE html>
<html lang="en">
<head>
  <title>Leituras de Temperatura and Humidade</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
  <style>
    #map {
      margin-left: 12.5%;
      height: 400px;
      width: 75%;
      margin-top: 50px;
    }
  </style>
  </head>
<body>

<nav>
  <h4>LORAWAN</h4>
  <ul>
    <li><a href="/logged">Pagina Inicial</a></li>
    <li><a href="/locals">Locais</a></li>
    <li><a href="/profile">Perfil</a></li>
    <li><a href="/logout">Log Out</a></li>
  </ul>
</nav>

<h1>Lista de Sensores</h1>

<table>
  <thead>
    <tr>
      <th>Nome do Sensor</th>
      <th>Descrição</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    {{#each sensors}}
    
    <tr>
      <td><a href="/sensorsread/{{this.sensorname}}">{{this.sensorname}}</a></td>
      <td>{{this.description}}</td>


        <td>
      <div class="action-buttons">
        <div class="edit" onclick="editSensor('{{this.sensorname}}')">
            Editar
         </div>

        <div class="delete" onclick="deleteSensor({{this.id}})">Delete</div>
      </div>
    </td>
    
    </tr>
     
    {{/each}}
   
  </tbody>
</table>

<button class="submit">
  <span><a href="/addsensor">Adicionar novo sensor</a></span>
</button>

<button class="back">
  <a href="/logged">Voltar</a>
</button>

<h1 style="margin-top:30px; text-align:center">Localização dos sensores</h1>
<div id="map"></div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>

<script>
const sensors = [
		{{#each sensors}}
			{
				latitude: {{this.latitude}},
				longitude: {{this.longitude}},
				sensorname: "{{this.sensorname}}"
			},
		{{/each}}
	];

  console.log('sensors array:', sensors);

 // Função para criar o mapa e adicionar marcadores
  function createMap() {
    // Inicialize o mapa
    const map = L.map('map');

    // Verifique se há sensores
    if (sensors.length > 0) {
      // Obtenha as coordenadas dos sensores
      const coordinates = sensors.map(sensor => [sensor.latitude, sensor.longitude]);

      // Calcule o centro do mapa com base nas coordenadas dos sensores
      const center = coordinates.reduce(
        (acc, cur) => [acc[0] + cur[0] / coordinates.length, acc[1] + cur[1] / coordinates.length],
        [0, 0]
      );

      // Configure a exibição do mapa com base no centro dos sensores
      map.setView(center, 13);

      // Adicione marcadores para cada sensor
      sensors.forEach(sensor => {
        const { latitude, longitude, sensorname } = sensor;

        // Crie um marcador para o sensor
        const marker = L.marker([latitude, longitude]).addTo(map);
        // Crie um elemento HTML personalizado para exibir o nome do sensor
        const sensorNameElement = document.createElement('div');
        sensorNameElement.innerText = sensorname;

        // Adicione o elemento ao marcador
        marker.bindPopup(sensorNameElement);
      });
    } else {
      // Caso não haja sensores, tente obter a geolocalização do usuário
      navigator.geolocation.getCurrentPosition(
        position => {
          // Obtenha as coordenadas de latitude e longitude do usuário
          const { latitude, longitude } = position.coords;

          // Defina a visualização do mapa com base na geolocalização do usuário
          map.setView([latitude, longitude], 13);

          // Crie um marcador para a localização do usuário
          const marker = L.marker([latitude, longitude]).addTo(map);
          // Crie um elemento HTML personalizado para exibir a localização do usuário
          const userLocationElement = document.createElement('div');
          userLocationElement.innerText = 'Você está aqui';

          // Adicione o elemento ao marcador
          marker.bindPopup(userLocationElement);
        },
        error => {
          console.error('Erro ao obter a geolocalização:', error);
          // Caso ocorra um erro ao obter a geolocalização, defina uma visualização padrão
          map.setView([0, 0], 13);
        }
      );
    }

    // Adicione um tile layer (você pode usar um provedor de mapas de sua escolha)
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 18
    }).addTo(map);
  }

  // Chame a função para criar o mapa e adicionar os marcadores
  createMap();
</script>


<script>

  const editSensor= (sensorname) => {
    // Redirecionar para a página de edição do local com o ID fornecido
    window.location.href = `/sensors/editsensor/${sensorname}`;
  };

  const deleteSensor = (id) => {
    fetch('http://localhost:3000/addsensor', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id }),
    })
      .then(() => {
        location.reload()
      })
  }
</script>

</body>
</html>
