<!DOCTYPE html>
<html lang="en">
<head>
  <title>Temperature and Humidity Readings</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style.css" >
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
</head>
<body>

<nav>
  <h4>LORAWAN</h4>
  <ul>
    <li><a href="/logged">Home</a></li>
    <li><a href="/sensors">My Sensors</a></li>
    <li><a href="/locals">Locals</a></li>
    <li><a href="/logout">Log Out</a></li>
  </ul>
</nav>

<div class="container mt-4">
  <div class="card">
    <div class="card-header">
      Add Sensor 
    </div>

    <div class="card-body">
      <form id="sensorForm" action="/addsensor" method="POST">
        <div class="mb-3">
          <label for="model">Model:</label>
          <input type="text" class="form-control" id="model" name="model" value="Arduino MKR WAN 1310" readonly>
        </div>

        <div class="mb-3">
          <label for="devEUI">DEV EUI:</label>
          <input type="text" class="form-control" id="devEUI" name="devEUI" required>
        </div>

        <div class="mb-3">
          <label for="appEUI">APP EUI:</label>
          <input type="text" class="form-control" id="appEUI" name="appEUI" value="0000000000000000" required>
        </div>

        <div class="mb-3">
          <label for="appKey">APP KEY:</label>
          <input type="text" class="form-control" id="appKey" name="appKey" required>
        </div>

        <div class="mb-3">
          <label for="sensorname">Name Sensor:</label>
          <input type="text" class="form-control" id="sensorname" name="sensorname" placeholder="Ex. Quintal, Jardim, Vinha" required>
        </div>

        <div class="mb-3">
          <label for="location">Localização:</label>
          <div id="map" style="height: 400px"></div>
          <input type="hidden" id="latitude" name="latitude">
          <input type="hidden" id="longitude" name="longitude">
        </div>

        <div class="mb-3">
          <label for="description" class="form-label">Descrição Sensor:</label>
          <input type="text" class="form-control" id="description" name="description" placeholder="Ex. vista para jardim, vista da vinha" required>
        </div>

        <div class="mb-3">
          <label for="local" class="form-label">Local:</label>
          <select name="localId" class="form-control" id="localId">
            <option value="" selected>Selecione um local existente</option>
            {{#each locals}}
            <option value="{{this.id}}">{{this.localName}}</option>
            {{/each}}
            <option value="new">Novo Local</option>
          </select>
          <small id="newLocalHelp" class="form-text text-muted">Caso a localização desejada não esteja listada, selecione "Novo Local" e insira o nome do novo local abaixo.</small>
        </div>

        <div class="mb-3">
          <label for="newLocal" class="form-label">Novo Local:</label>
          <input type="text" class="form-control" id="newLocal" name="newLocal">
        </div>

        <div class="mb-3">
          <label for="newLocalDescription" class="form-label">Descrição do Novo Local:</label>
          <input type="text" class="form-control" id="newLocalDescription" name="newLocalDescription">
        </div>

        <button type="submit" class="submit" name="save_select">Add Sensor</button>

        <button class="back"> 
          <a href="sensors"> 
            Voltar
          </a>
        </button>
         
      </form>
    </div>
  </div>
</div>



 
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>

<script>

  //SCRIPT MAPA 
  const mapElement = document.getElementById('map');
  const latitudeInput = document.getElementById('latitude');
  const longitudeInput = document.getElementById('longitude');


   // Inicialize o mapa
  const map = L.map('map').setView([0, 0], 13);

  // Adicione um tile layer (você pode usar um provedor de mapas de sua escolha)
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18
  }).addTo(map);

  // Obtenha as coordenadas do usuário usando a API Geolocation
  navigator.geolocation.getCurrentPosition(
    function(position) {
      const { latitude, longitude } = position.coords;

      // Defina a visualização do mapa nas coordenadas do usuário
      map.setView([latitude, longitude], 13);

      // Cria um marcador inicial na posição do usuário
      const marker = L.marker([latitude, longitude]).addTo(map);

      // Atualiza as coordenadas do marcador e dos campos de entrada de latitude e longitude
      function updateMarkerPosition(event) {
        const { lat, lng } = event.latlng;
        marker.setLatLng(event.latlng);
        latitudeInput.value = lat;
        longitudeInput.value = lng;
        marker.bindPopup(`Latitude: ${lat.toFixed(6)}, Longitude: ${lng.toFixed(6)}`).openPopup();
      }

      // Adiciona um evento de clique ao mapa para atualizar a posição do marcador
      map.on('click', updateMarkerPosition);

      // Atualiza a posição do marcador quando o usuário se mover
      map.on('locationfound', updateMarkerPosition);

      // Atualiza a posição do marcador se ocorrer um erro ao obter a localização do usuário
      map.on('locationerror', function() {
        updateMarkerPosition({ latlng: map.getCenter() });
      });
    },
    function(error) {
      console.error('Erro ao obter as coordenadas do usuário:', error);
      // Define uma localização padrão aqui caso não seja possível obter as coordenadas do usuário
      map.setView([0, 0], 13);
    }
  );

  //SCRIPT SENSOR
  const devEUIInput = document.getElementById('devEUI');
  const appKeyInput = document.getElementById('appKey');
  const sensorForm = document.getElementById('sensorForm');
  
  sensorForm.addEventListener('submit', function(event) {
    // Validação do devEUI (formato XXXXXXXXXXXXXXXX)
    const devEUIRegex = /^[0-9A-Fa-f]{16}$/;
    if (!devEUIRegex.test(devEUIInput.value)) {
      event.preventDefault(); // Impede o envio do formulário
      alert('O devEUI deve ter 16 caracteres hexadecimais (0-9, A-F).');
      return;
    }
    
    // Validação do appKey (formato XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
    const appKeyRegex = /^[0-9A-Fa-f]{32}$/;
    if (!appKeyRegex.test(appKeyInput.value)) {
      event.preventDefault(); // Impede o envio do formulário
      alert('O appKey deve ter 32 caracteres hexadecimais (0-9, A-F).');
      return;
    }
  });
</script>
</body>
</html>
