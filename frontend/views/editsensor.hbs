<!DOCTYPE html>
<html lang="en">
<head>
  <title>Leituras de Temperatura and Humidade</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style.css" >
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
   <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
</head>
<body>

<nav>
  <h4>LORAWAN</h4>
  <ul>
    <li><a href="/logged">Pagina Inicial</a></li>
    <li><a href="/sensors">Meus Sensores</a></li>
    <li><a href="/locals">Locais</a></li>
    <li><a href="/logout">Log Out</a></li>
  </ul>
</nav>

<div class="container mt-4">
  <div class="card">
    <div class="card-header">
      Editar Sensor - {{sensor.sensorname}}
    </div>

    <div class="card-body">
      <form id="sensorForm" action="/sensors/editsensor/{{sensor.sensorname}}" method="POST">
        
        <div class="mb-3">
          <label for="devEUI">Novo DEV EUI:</label>
          <input type="text" class="form-control" id="devEUI" name="devEUI" required>
        </div>

        <div class="mb-3">
          <label for="appKey"> Nova APP KEY:</label>
          <input type="text" class="form-control" id="appKey" name="appKey" required>
        </div>

        <div class="mb-3">
          <label for="sensorname">Novo nome do sensor:</label>
          <input type="text" class="form-control" id="newSensorname" name="newSensorname" placeholder="Ex. Quintal, Jardim, Vinha" required>
        </div>

       <div class="mb-3">
  <label for="location">Localização:</label>
  <div id="map" style="height: 400px;"></div>
  <input type="hidden" id="latitude" name="latitude" value="{{sensor.latitude}}">
  <input type="hidden" id="longitude" name="longitude" value="{{sensor.longitude}}">
</div>

        <div class="mb-3">
          <label for="description" class="form-label">Nova Descriçao do sensor:</label>
          <input type="text" class="form-control" id="description" name="description" placeholder="Ex. vista para jardim, vista da vinha" required>
        </div>

        <div class="mb-3">
          <label for="local" class="form-label">Novo Local:</label>
          <select name="localId" class="form-control" id="localId">
            <option value="" selected>Selecione um local existente</option>
            {{#each locals}}
            <option value="{{this.id}}">{{this.localName}}</option>
            {{/each}}
            <option value="new">Novo Local</option>
          </select>
          <small id="newLocalHelp" class="form-text text-muted">Caso a localização desejada não esteja listada, selecione "Novo Local" e insira o nome do novo local abaixo.</small>
        </div>

        <div class="mb-3">
          <label for="newLocal" class="form-label">Novo Local:</label>
          <input type="text" class="form-control" id="newLocal" name="newLocal">
        </div>

        <div class="mb-3">
          <label for="newLocalDescription" class="form-label"> Descrição do Novo Local:</label>
          <input type="text" class="form-control" id="newLocalDescription" name="newLocalDescription">
        </div>

        <button type="submit" name="save_select" class="submit">Editar Sensor</button>

        <button class="back"> 
          <a href="sensors">
            Voltar
          </a>
        </button>
         
      </form>
    </div>
  </div>
</div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
 
<script>
const mapElement = document.getElementById('map');
  const latitudeInput = document.getElementById('latitude');
  const longitudeInput = document.getElementById('longitude');

  const map = L.map('map');

  // Adicione um tile layer (você pode usar um provedor de mapas de sua escolha)
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
    maxZoom: 18
  }).addTo(map);

  // Verifique se há coordenadas de latitude e longitude no formulário
  const latitude = parseFloat(latitudeInput.value);
  const longitude = parseFloat(longitudeInput.value);

  if (!isNaN(latitude) && !isNaN(longitude)) {
    // Se houver coordenadas no formulário, configure a exibição do mapa com base nessas coordenadas
    map.setView([latitude, longitude], 13);

    // Crie um marcador para a localização atual do sensor
    var marker = L.marker([latitude, longitude]).addTo(map);

    // Adicione um popup com as coordenadas do sensor ao marcador
    marker.bindPopup(`Latitude: ${latitude.toFixed(6)}, Longitude: ${longitude.toFixed(6)}`).openPopup();
  } else {
    // Caso não haja coordenadas no formulário, defina uma localização padrão
    map.setView([0, 0], 13);
  }

  // Função para atualizar a posição do marcador e as coordenadas do formulário
  function updateMarkerPosition(event) {
    const { lat, lng } = event.latlng;
    if (marker) {
      marker.setLatLng(event.latlng);
      marker.bindPopup(`Latitude: ${lat.toFixed(6)}, Longitude: ${lng.toFixed(6)}`).openPopup();
    } else {
      marker = L.marker([lat, lng]).addTo(map);
      marker.bindPopup(`Latitude: ${lat.toFixed(6)}, Longitude: ${lng.toFixed(6)}`).openPopup();
    }
    latitudeInput.value = lat;
    longitudeInput.value = lng;
  }

  // Adicione um evento de clique ao mapa para atualizar a posição do marcador
  map.on('click', updateMarkerPosition);
</script>

<script>
   const devEUIInput = document.getElementById('devEUI');
  const appKeyInput = document.getElementById('appKey');
  const sensorForm = document.getElementById('sensorForm');

  console.log('New Sensor Name:', document.getElementById('sensorname').value);
  
  sensorForm.addEventListener('submit', function(event) {
    // Validação do devEUI (formato XXXXXXXXXXXXXXXX)
    const devEUIRegex = /^[0-9A-Fa-f]{16}$/;
    if (!devEUIRegex.test(devEUIInput.value)) {
      event.preventDefault(); // Impede o envio do formulário
      alert('O devEUI deve ter 16 caracteres hexadecimais (0-9, A-F).');
      return;
    }
    
    // Validação do appKey (formato XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
    const appKeyRegex = /^[0-9A-Fa-f]{32}$/;
    if (!appKeyRegex.test(appKeyInput.value)) {
      event.preventDefault(); // Impede o envio do formulário
      alert('O appKey deve ter 32 caracteres hexadecimais (0-9, A-F).');
      return;
    }
  });
</script>
</body>
</html>
