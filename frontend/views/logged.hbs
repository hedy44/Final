<!DOCTYPE html>
<html lang="en">
<head>
  <title>Leituras de Temperatura and Humidade</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="/style.css" >
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>


</head>
<body>

<nav>
		<h4>LORAWAN</h4>
		<ul>
            
            <li><a href="/sensors">Meus Sensores</a></li>
            <li><a href="/locals">Locais</a></li>
            <li><a href="/profile">Perfil</a></li>
            <li><a href="/logout">Log Out</a></li>
            
			
		</ul>
	</nav>


<div class="container mt-4">
    <div class="home">
        <div class="titulo">
        <h1>Bem-vindo à Monitorização de Dados em Redes de Sensores suportadas pela TTN-Tomar</h1>
        <h2>{{firstName}} {{lastName}}</h2>
        </div>

        <div id="map"></div>
       
    
</div>

</div>


<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
 <script>
	const sensors = [
		{{#each sensors}}
			{
				latitude: {{this.latitude}},
				longitude: {{this.longitude}},
				sensorname: "{{this.sensorname}}"
			},
		{{/each}}
	];

	// Função para criar o mapa e adicionar marcadores
	function createMap() {
		// Inicialize o mapa
		const map = L.map('map');

		// Verifique se há sensores
		if (sensors.length > 0) {
			// Calcule o centro dos sensores
			let totalLat = 0;
			let totalLng = 0;

			sensors.forEach(sensor => {
				totalLat += sensor.latitude;
				totalLng += sensor.longitude;
			});

			const centerLat = totalLat / sensors.length;
			const centerLng = totalLng / sensors.length;

			// Configure a exibição do mapa com base no centro dos sensores
			map.setView([centerLat, centerLng], 13);
		} else {
      // Tentar obter a geolocalização do usuário
      navigator.geolocation.getCurrentPosition(
        position => {
          // Obter as coordenadas de latitude e longitude do usuário
          const { latitude, longitude } = position.coords;

          // Definir a visualização do mapa com base na geolocalização do usuário
          map.setView([latitude, longitude], 13);
		  // Crie um marcador para a localização do usuário
          const marker = L.marker([latitude, longitude]).addTo(map);
          // Crie um elemento HTML personalizado para exibir a localização do usuário
          const userLocationElement = document.createElement('div');
          userLocationElement.innerText = 'Você está aqui';
        },
        error => {
          console.error('Erro ao obter a geolocalização:', error);
          // Caso ocorra um erro ao obter a geolocalização, defina uma visualização padrão
          map.setView([0, 0], 13);
        }
      );
    }

		// Adicione um tile layer
		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
			maxZoom: 18
		}).addTo(map);

		// Adicione marcadores para cada sensor
		sensors.forEach(sensor => {
			const { latitude, longitude, sensorname } = sensor;

			// Crie um marcador para o sensor
			const marker = L.marker([latitude, longitude]).addTo(map);

			// Adicione um popup com o nome do sensor ao marcador
			marker.bindPopup(sensorname);

			// Adicione um evento de clique ao marcador para redirecionar para a página de leituras
			marker.on('click', () => {
				window.location.href = `/sensorsread/${sensorname}`; 
			});
		});
	}

	// Chame a função para criar o mapa e adicionar os marcadores
	createMap();
</script>

</body>
</html> 


